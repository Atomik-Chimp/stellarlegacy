# Generated automatically from Makefile.in by config.pl.
# KDE tags expanded automatically by am_edit - $Revision: 1.1 $ 
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

####### kdevelop will overwrite this part!!! (begin)##########


SHELL = /bin/sh

srcdir = .
top_srcdir = ../..
VPATH = .
prefix = /usr/local
exec_prefix = ${prefix}
#>- 
bindir = ${exec_prefix}/bin
#>+ 3
DEPDIR = .deps

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/stellarlegacy
pkglibdir = $(libdir)/stellarlegacy
pkgincludedir = $(includedir)/stellarlegacy

top_builddir = ../..

ACLOCAL = /home/pi/prog/stellarlegacy/stellarlegacy-0.2/stellarlegacy/admin/missing aclocal-1.4
AUTOCONF = /home/pi/prog/stellarlegacy/stellarlegacy-0.2/stellarlegacy/admin/missing autoconf
AUTOMAKE = /home/pi/prog/stellarlegacy/stellarlegacy-0.2/stellarlegacy/admin/missing automake-1.4
AUTOHEADER = /home/pi/prog/stellarlegacy/stellarlegacy-0.2/stellarlegacy/admin/missing autoheader

INSTALL = /usr/bin/install -c -p
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG) $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = armv7l-unknown-linux-gnu
build_triplet = armv7l-unknown-linux-gnu
host_alias = armv7l-unknown-linux-gnu
host_triplet = armv7l-unknown-linux-gnu
target_alias = armv7l-unknown-linux-gnu
target_triplet = armv7l-unknown-linux-gnu
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUTODIRS = 
CC = gcc
CONF_FILES =  $(top_srcdir)/configure.in.in
CPP = gcc -E
CXX = c++
CXXCPP = c++ -E
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DLLTOOL = @DLLTOOL@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
EXEEXT = 
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KDECONFIG = @KDECONFIG@
KDE_CXXFLAGS = 
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = #
KDE_USE_CLOSURE_TRUE = 
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LEX = @LEX@
LEXLIB = @LEXLIB@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = @LIBRESOLV@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTIFF = @LIBTIFF@
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXINERAMA = @LIBXINERAMA@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LN_S = ln -s
MAKEINFO = /home/pi/prog/stellarlegacy/stellarlegacy-0.2/stellarlegacy/admin/missing makeinfo
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = 
NOOPT_CXXFLAGS =  -fno-exceptions -fno-check-new
NOREPO = -fno-repo
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = stellarlegacy
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTE_NORTTI = @QTE_NORTTI@
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = ranlib
REPO = -frepo
SETUIDFLAGS = @SETUIDFLAGS@
STRIP = strip
TOPSUBDIRS =  stellarlegacy
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = @USE_THREADS@
VERSION = 0.2
WOVERLOADED_VIRTUAL = 
XGETTEXT = @XGETTEXT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
all_includes =  
all_libraries =  
idldir = @idldir@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
libstdcxxdir = 
micodir = @micodir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@

lib_LTLIBRARIES = libslcommon.la

LDFLAGS = 

libslcommon_la_LDFLAGS = -lstdc++ -version-info 0:2:0 

#>- libslcommon_la_METASOURCES = AUTO

libslcommon_la_SOURCES = stringtools.cpp os_specific.cpp link.cpp line.cpp datapackage.cpp rectangle.cpp random.cpp point.cpp osval.cpp bitmap.cpp global.cpp 

EXTRA_DIST = defs.h global.cpp global.h bitmap.cpp bitmap.h osval.cpp osval.h point.cpp point.h random.cpp random.h rectangle.cpp rectangle.h datapackage.h datapackage.cpp plist.h leakchecker.h line.h line.cpp link.cpp link.h os_specific.cpp os_specific.h stringtools.h stringtools.cpp prototype.h 

INCLUDES = $(all_includes) $(INCL)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../..
CPPFLAGS = 
LIBS = 
libslcommon_la_LIBADD = 
#>- libslcommon_la_OBJECTS =  stringtools.lo os_specific.lo link.lo line.lo \
#>- datapackage.lo rectangle.lo random.lo point.lo osval.lo bitmap.lo \
#>- global.lo
#>+ 6
libslcommon_la_final_OBJECTS = libslcommon_la.all_cpp.lo 
libslcommon_la_nofinal_OBJECTS = stringtools.lo os_specific.lo link.lo line.lo \
	datapackage.lo rectangle.lo random.lo point.lo osval.lo bitmap.lo \
	global.lo
libslcommon_la_OBJECTS = $(libslcommon_la_nofinal_OBJECTS)
#libslcommon_la_OBJECTS = $(libslcommon_la_final_OBJECTS)
CXXFLAGS = -O2 -fno-exceptions -fno-check-new
#>- CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
#>+ 1
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(libslcommon_la_SOURCES)
OBJECTS = $(libslcommon_la_OBJECTS)

#>- all: all-redirect
#>+ 1
all: docs-am  all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
#>- 	cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps stellarlegacy/common/Makefile
#>+ 2
	cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps stellarlegacy/common/Makefile
	cd $(top_srcdir) && perl admin/am_edit stellarlegacy/common/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	&& CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	if test -f $$p; then \
	echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	$(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libslcommon.la: $(libslcommon_la_OBJECTS) $(libslcommon_la_DEPENDENCIES)
	$(CXXLINK) -rpath $(libdir) $(libslcommon_la_LDFLAGS) $(libslcommon_la_OBJECTS) $(libslcommon_la_LIBADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	awk '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	&& mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	awk '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	|| (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = stellarlegacy/common

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	d=$(srcdir); \
	if test -d $$d/$$file; then \
	cp -pr $$d/$$file $(distdir)/$$file; \
	else \
	test -f $(distdir)/$$file \
	|| ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	|| cp -p $$d/$$file $(distdir)/$$file || :; \
	fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
	mostlyclean-libtool mostlyclean-tags \
	mostlyclean-generic

mostlyclean: mostlyclean-am

#>- clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
#>- clean-generic mostlyclean-am
#>+ 2
clean-am: clean-final   clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
	clean-generic mostlyclean-am

#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
	distclean-libtool distclean-tags distclean-generic \
	clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
	maintainer-clean-compile maintainer-clean-libtool \
	maintainer-clean-tags maintainer-clean-generic \
	distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
	clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
	uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
	distclean-compile clean-compile maintainer-clean-compile \
	mostlyclean-libtool distclean-libtool clean-libtool \
	maintainer-clean-libtool tags mostlyclean-tags distclean-tags \
	clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
	check-am installcheck-am installcheck install-exec-am install-exec \
	install-data-am install-data install-am install uninstall-am uninstall \
	all-redirect all-am all installdirs mostlyclean-generic \
	distclean-generic clean-generic maintainer-clean-generic clean \
	mostlyclean distclean maintainer-clean


####### kdevelop will overwrite this part!!! (end)############

  INCL = -I$(top_srcdir)/stellarlegacy
#  INCL = -I$(top_srcdir)/stellarlegacy -I$(libstdcxxdir)/include/g++-v3

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 2
docs-am:

#>+ 5
force-reedit:
		cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps stellarlegacy/common/Makefile
	cd $(top_srcdir) && perl admin/am_edit stellarlegacy/common/Makefile.in


#>+ 11
libslcommon_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/stringtools.cpp $(srcdir)/os_specific.cpp $(srcdir)/link.cpp $(srcdir)/line.cpp $(srcdir)/datapackage.cpp $(srcdir)/rectangle.cpp $(srcdir)/random.cpp $(srcdir)/point.cpp $(srcdir)/osval.cpp $(srcdir)/bitmap.cpp $(srcdir)/global.cpp  
	@echo 'creating libslcommon_la.all_cpp.cpp ...'; \
	rm -f libslcommon_la.all_cpp.files libslcommon_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libslcommon_la.all_cpp.final; \
	for file in stringtools.cpp os_specific.cpp link.cpp line.cpp datapackage.cpp rectangle.cpp random.cpp point.cpp osval.cpp bitmap.cpp global.cpp ; do \
	  echo "#include \"$$file\"" >> libslcommon_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libslcommon_la.all_cpp.final; \
	done; \
	cat libslcommon_la.all_cpp.final libslcommon_la.all_cpp.files  > libslcommon_la.all_cpp.cpp; \
	rm -f libslcommon_la.all_cpp.final libslcommon_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libslcommon_la.all_cpp.cpp

#>+ 2
final:
	$(MAKE) libslcommon_la_OBJECTS="$(libslcommon_la_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) libslcommon_la_OBJECTS="$(libslcommon_la_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) libslcommon_la_OBJECTS="$(libslcommon_la_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) libslcommon_la_OBJECTS="$(libslcommon_la_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo
